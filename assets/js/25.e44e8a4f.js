(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{555:function(s,t,a){s.exports=a.p+"assets/img/jiexi.8160d53d.jpeg"},647:function(s,t,a){"use strict";a.r(t);var v=a(9),_=Object(v.a)({},(function(){var s=this,t=s.$createElement,v=s._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"title"}),v("h1",{attrs:{id:"前言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),v("p",[s._v("谈到CSS，就会想到兼容性，想到兼容性就会涉及到浏览器，浏览器是一切CSS的运行环境。")])]),s._v(" "),v("h2",{attrs:{id:"浏览器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器"}},[s._v("#")]),s._v(" 浏览器")]),s._v(" "),v("p",[s._v("浏览器这家伙是前端开发者每天都打交道的工具，正是它，才有了前端这个职业。")]),s._v(" "),v("p",[v("strong",[s._v("浏览器")]),s._v(" 指显示万维网上的媒体信息(文字、图像、音频、视频等)和处理用户交互操作的软件。")]),s._v(" "),v("p",[s._v("浏览器正是Internet时代的产物，随着"),v("code",[s._v("各种设备操作系统的普及")]),s._v("、"),v("code",[s._v("网络技术的全球化")]),s._v("以及"),v("code",[s._v("人们对信息需求的爆炸式增长")]),s._v("，为浏览器的诞生和兴起提供了强大的动力，同时它也标志着互联网时代的来临。")]),s._v(" "),v("h3",{attrs:{id:"组成"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#组成"}},[s._v("#")]),s._v(" 组成")]),s._v(" "),v("p",[s._v("虽然目前市场上的浏览器品牌众多，但是浏览器的结构还是由以下几部分组成。")]),s._v(" "),v("ul",[v("li",[s._v("地址栏：用于输入网站地址，通过识别地址信息跳转到对应网站")]),s._v(" "),v("li",[s._v("菜单栏：包含设置内容和常用快捷操作，用户可自定义设置内容")]),s._v(" "),v("li",[s._v("标签栏：包含一个或多个窗口，窗口的内容互不干扰，独立运行")]),s._v(" "),v("li",[s._v("窗口栏：显示当前网站地址的访问内容，可为用户提供各种交互操作")]),s._v(" "),v("li",[s._v("状态栏：用于实时显示当前操作和下载Web页面的进度情况")])]),s._v(" "),v("h3",{attrs:{id:"历史"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#历史"}},[s._v("#")]),s._v(" 历史")]),s._v(" "),v("p",[s._v("浏览器作为一个跨时代的科技产物，为现代网络人机交互的发展提供了强而有力的支持，历史的时刻不应该被忘记，以下简单列举一些浏览器的历史时刻。")]),s._v(" "),v("ul",[v("li",[s._v("1993年，NCSA组织发布了Mosaic浏览器")]),s._v(" "),v("li",[s._v("1994年，网景公司发布了Navigator浏览器")]),s._v(" "),v("li",[s._v("1995年，微软公司发布了IExplorer浏览器，并掀起了浏览器之战")]),s._v(" "),v("li",[s._v("1996年，Navigator浏览器的市场份额达到86%，微软公司开始将IExplorer浏览器整合到Windows操作系统中")]),s._v(" "),v("li",[s._v("1996年，ASA公司发布了Opera浏览器")]),s._v(" "),v("li",[s._v("1998年，网景公司启动其开源产品，开始推出Mozilla")]),s._v(" "),v("li",[s._v("2001年，为人诟病的IExplorer 6发布，这货霸占国内市场十多年")]),s._v(" "),v("li",[s._v("2002年，网景公司发布了Firefox浏览器")]),s._v(" "),v("li",[s._v("2003年，苹果公司发布了Safari浏览器")]),s._v(" "),v("li",[s._v("2004年，IExplorer浏览器的市场份额达到了历史顶峰92%，自此以后其市场份额开始下滑")]),s._v(" "),v("li",[s._v("2006年，Firefox 3的发布创下了吉尼斯世界纪录，一天800万下载量")]),s._v(" "),v("li",[s._v("2008年，谷歌公司发布了Chrome浏览器")])]),s._v(" "),v("p",[s._v("至此，世界五大浏览器鼎立的格局逐渐形成，也为后期浏览器市场的多变提供了广大的技术支持。浏览器发展史并不久远，虽然只有短短的20多年，但是却不断在更新迭代，为广大互联网用户提供越来越强大的人机交互功能。")]),s._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[s._v("世界五大浏览器：Chrome、Safari、Firefox、Opera、IExplorer/Edge\n")])]),s._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[s._v("1")]),v("br")])]),v("h2",{attrs:{id:"渲染引擎"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#渲染引擎"}},[s._v("#")]),s._v(" 渲染引擎")]),s._v(" "),v("p",[v("strong",[s._v("渲染引擎")]),s._v("又名"),v("strong",[s._v("浏览器内核")]),s._v("，指负责对网页语法解析并渲染成一张可视化页面的解析器。")]),s._v(" "),v("p",[s._v("它是浏览器最核心最重要的部位，不同内核对网页语法的解析也有不同，因此同一网页语法在不同内核的浏览器中的渲染效果也可能不同，这就是常说的"),v("strong",[s._v("浏览器差异性")]),s._v("。")]),s._v(" "),v("p",[s._v("上述提到的世界五大浏览器，在自身的发展过程中都使用了一种或多种浏览器内核作为自身的渲染引擎。")]),s._v(" "),v("ul",[v("li",[s._v("Google Chrome：Webkit(前期)、Blink(后期)")]),s._v(" "),v("li",[s._v("Apple Safari：Webkit")]),s._v(" "),v("li",[s._v("Mozilla Firefox：Gecko")]),s._v(" "),v("li",[s._v("ASA Opera：Presto(前期)、Blink(后期)")]),s._v(" "),v("li",[s._v("Microsoft IExplorer：Trident")]),s._v(" "),v("li",[s._v("Microsoft Edge：Trident(前期)、Blink(后期)")])]),s._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[s._v("IExplorer和Edge同是微软公司开发的浏览器产品，鉴于IExplorer存在很多为人诟病的问题，在后续的系统升级中逐渐使用Edge取代IExplorer在Windows上的位置\n")])]),s._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[s._v("1")]),v("br")])]),v("p",[s._v("因此20多年的浏览器发展史里，被大规模使用的浏览器内核也就这五个。")]),s._v(" "),v("p",[v("strong",[s._v("Blink内核")]),s._v("：由谷歌公司和欧朋公司合作自研的内核，同时谷歌公司也将其作为开源内核架构"),v("code",[s._v("Chromium")]),s._v("的一部分发布，在"),v("code",[s._v("Chrome 28+")]),s._v("和"),v("code",[s._v("Opear 15+")]),s._v("中被使用。\n"),v("strong",[s._v("Webkit内核")]),s._v("：由苹果公司自研的内核，同时也是"),v("code",[s._v("Blink内核")]),s._v("的原型，在"),v("code",[s._v("Chrome 1 ~ 28")]),s._v("和"),v("code",[s._v("Safari 1+")]),s._v("中被使用。\n"),v("strong",[s._v("Gecko内核")]),s._v("：由网景公司自研的内核，先期在"),v("code",[s._v("Navigator")]),s._v("中使用，后期推广到"),v("code",[s._v("Firefox")]),s._v("上，在"),v("code",[s._v("Firefox 1+")]),s._v("中被使用。\n"),v("strong",[s._v("Presto内核")]),s._v("：由欧朋公司自研的内核，其渲染性能达到极致但是牺牲了兼容性，目前已经废弃，在"),v("code",[s._v("Opear 7 ~ 14")]),s._v("中被使用。\n"),v("strong",[s._v("Trident内核")]),s._v("：由微软公司自研的内核，由于其被包含在全世界使用率最高的"),v("code",[s._v("Windows操作系统")]),s._v("中，导致十多年时间里一直称霸浏览器内核界，在"),v("code",[s._v("IExplorer 4+")]),s._v("中被使用。")]),s._v(" "),v("h2",{attrs:{id:"渲染过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#渲染过程"}},[s._v("#")]),s._v(" 渲染过程")]),s._v(" "),v("p",[s._v("要了解浏览器页面的渲染过程，首先得知道"),v("code",[s._v("关键渲染路径")]),s._v("。"),v("strong",[s._v("关键渲染路径")]),s._v("指浏览器从最初接收请求得到HTML、CSS、JS等资源，然后解析、构建、渲染、布局、绘制、合成，到最后呈现在用户眼前界面的整个过程。")]),s._v(" "),v("p",[s._v("笔者将关键渲染路径划分理解，页面的渲染过程分为以下几部分。")]),s._v(" "),v("ul",[v("li",[s._v("解析文件\n"),v("ul",[v("li",[s._v("将html文件转换为DOM树")]),s._v(" "),v("li",[s._v("将css文件转换为CSSOM树")]),s._v(" "),v("li",[s._v("将DOM树和CSSOM树合并生成渲染树")])])]),s._v(" "),v("li",[s._v("绘制图层\n"),v("ul",[v("li",[s._v("根据渲染树布局(回流)")]),s._v(" "),v("li",[s._v("根据布局绘制(重绘)")])])]),s._v(" "),v("li",[s._v("合成图层：合成图层显示在屏幕上")])]),s._v(" "),v("h3",{attrs:{id:"解析文件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#解析文件"}},[s._v("#")]),s._v(" 解析文件")]),s._v(" "),v("p",[s._v("HTML文档描述一个页面的结构，浏览器通过"),v("code",[s._v("HTML解析器")]),s._v("将HTML解析成"),v("code",[s._v("DOM树")]),s._v("结构。HTML文档中所有内容皆为节点，各节点间拥有层级关系，彼此相连，构成DOM树。构建"),v("code",[s._v("DOM树")]),s._v("的过程：读取HTML文档的"),v("strong",[s._v("字节(Bytes)")]),s._v("，将字节转换成"),v("strong",[s._v("字符(Chars)")]),s._v("，依据字符确定"),v("strong",[s._v("标签(Tokens)")]),s._v("，将标签转换成"),v("strong",[s._v("节点(Nodes)")]),s._v("，以节点为基准构建"),v("strong",[s._v("DOM树")]),s._v("。")]),s._v(" "),v("p",[s._v("CSS文档描述一个页面的表现，浏览器通过"),v("code",[s._v("CSS解析器")]),s._v("将CSS解析成"),v("code",[s._v("CSSOM树")]),s._v("结构，与DOM树结构比较像。CSS文档中所有内容皆为节点，与HTML文档中的节点一一对应，各节点间拥有层级关系，彼此相连，构成"),v("code",[s._v("CSSOM树")]),s._v("。构建CSSOM树的过程：读取CSS文档的"),v("strong",[s._v("字节(Bytes)")]),s._v("，将字节转换成"),v("strong",[s._v("字符(Chars)")]),s._v("，依据字符确定"),v("strong",[s._v("标签(Tokens)")]),s._v("，将标签转换成"),v("strong",[s._v("节点(Nodes)")]),s._v("，以节点为基准构建"),v("strong",[s._v("CSSOM树")]),s._v("。与DOM树的构建过程完全一致。")]),s._v(" "),v("p",[s._v("在构建DOM树的过程中，当"),v("code",[s._v("HTML解析器")]),s._v("遇到"),v("code",[s._v("<script>")]),s._v("时会立即阻塞DOM树的构建，将控制权移交给浏览器的"),v("code",[s._v("JS引擎")]),s._v("，等到"),v("code",[s._v("JS引擎")]),s._v("运行完毕，浏览器才会从中断的地方恢复DOM树的构建。"),v("code",[s._v("<script>")]),s._v("的脚本加载完成后，"),v("code",[s._v("JS引擎")]),s._v("通过"),v("code",[s._v("DOM API")]),s._v("和"),v("code",[s._v("CSSOM API")]),s._v("操作DOM树和CSSOM树。为何会产生"),v("strong",[s._v("渲染阻塞")]),s._v("呢？其根本原因在于：JS操作DOM后，浏览器无法预测未来DOM的具体内容，为了防止无效操作和节省资源，只能阻塞DOM树的构建。")]),s._v(" "),v("img",{attrs:{src:a(555),alt:"解析",width:"300"}}),s._v(" "),v("h3",{attrs:{id:"绘制图层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#绘制图层"}},[s._v("#")]),s._v(" 绘制图层")]),s._v(" "),v("p",[s._v("进入绘制阶段，遍历渲染树，调用渲染器的"),v("code",[s._v("paint()")]),s._v("在屏幕上绘制内容。根据渲染树布局计算样式，即每个节点在页面中的布局、尺寸等几何属性。HTML默认是流式布局，CSS和JS会打破这种布局，改变DOM的几何属性和外观属性。在绘制过程中，根据渲染树布局，再根据布局绘制，这就是常听常说的"),v("strong",[s._v("回流重绘")]),s._v("。")]),s._v(" "),v("p",[s._v("在此涉及到两个核心概念："),v("strong",[s._v("回流")]),s._v("、"),v("strong",[s._v("重绘")]),s._v("。笔者用两句精简的话分别概括它们。")]),s._v(" "),v("ul",[v("li",[v("strong",[s._v("回流")]),s._v("：几何属性需改变的渲染")]),s._v(" "),v("li",[v("strong",[s._v("重绘")]),s._v("：更改外观属性而不影响几何属性的渲染")])]),s._v(" "),v("p",[s._v("当生成渲染树后，至少会渲染一次。在后续交互过程中，还会不断地重新渲染。这时只会"),v("code",[s._v("回流重绘")]),s._v("或"),v("code",[s._v("只有重绘")]),s._v("。因此引出一个定向法则："),v("strong",[s._v("回流必定引发重绘，重绘不一定引发回流")]),s._v("。")]),s._v(" "),v("h3",{attrs:{id:"合成图层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#合成图层"}},[s._v("#")]),s._v(" 合成图层")]),s._v(" "),v("p",[s._v("将回流重绘生成的图层逐张合并并显示在屏幕上。上述几个步骤并不是一次性顺序完成的，若DOM或CSSOM被修改，上述过程会被重复执行。实际上，CSS和JS往往会多次修改DOM或CSSOM，简单来说就是用户的交互操作引发了网页的重渲染。")]),s._v(" "),v("h2",{attrs:{id:"兼容性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#兼容性"}},[s._v("#")]),s._v(" 兼容性")]),s._v(" "),v("p",[v("strong",[s._v("兼容性")]),s._v("又名"),v("code",[s._v("网站兼容性")]),s._v("或"),v("code",[s._v("网页兼容性")]),s._v("，指网页在各种浏览器上的显示效果可能不同而产生浏览器和网页间的兼容问题。")]),s._v(" "),v("p",[s._v("说到兼容性，就不得不推荐一个专门为前端开发者定制可查询"),v("code",[s._v("CSS/JS特性")]),s._v("在各种浏览器中兼容性的网站"),v("a",{attrs:{href:"https://caniuse.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Caniuse"),v("OutboundLink")],1),s._v("，它可很好地保障网页在不同浏览器间的兼容性。有了这个工具可快速地了解使用到的代码在各个浏览器中的效果。所以后续使用VScode编码的过程中都会顺带使用"),v("code",[s._v("Caniuse")]),s._v("查看CSS属性以及选择器的兼容性。")]),s._v(" "),v("p",[s._v("产生浏览器间的兼容问题，正是上述谈到的"),v("code",[s._v("渲染引擎")]),s._v("而导致的。在网站的设计和开发中，做好浏览器兼容才能让网站在不同浏览器间都能显示正常。浏览器对标准的更好兼容能够给用户带来更好的使用体验，当然无法奢求浏览器厂商能统一所有浏览器标准，所以前端开发者只能自己着手解决。")]),s._v(" "),v("p",[s._v("以下聊聊处理CSS兼容性的三种方法，相对处理JS兼容性来说简单到不得了，这也是普遍前端开发者认为CSS简单的原因之一。通过以下方法处理，后续编码时就不会编写CSS私有属性了。")]),s._v(" "),v("h3",{attrs:{id:"磨平浏览器默认样式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#磨平浏览器默认样式"}},[s._v("#")]),s._v(" 磨平浏览器默认样式")]),s._v(" "),v("p",[s._v("每个浏览器的CSS默认样式不尽相同，所以最简单最有效的方法就是"),v("code",[s._v("对其默认样式初始化")]),s._v("。以下贴一个各位同学都会的初始化代码。简单暴力但是不明确，"),v("code",[s._v("*")]),s._v("通配符可是有执行性能问题的。")]),s._v(" "),v("div",{staticClass:"language-css line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-css"}},[v("code",[v("span",{pre:!0,attrs:{class:"token selector"}},[s._v("*")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[s._v("margin")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 0"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[s._v("padding")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 0"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),v("span",{pre:!0,attrs:{class:"token selector"}},[s._v("// 推荐用到什么就给什么清除\nbody, div, p, span")]),s._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[s._v("margin")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 0"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[s._v("padding")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 0"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[s._v("1")]),v("br"),v("span",{staticClass:"line-number"},[s._v("2")]),v("br"),v("span",{staticClass:"line-number"},[s._v("3")]),v("br"),v("span",{staticClass:"line-number"},[s._v("4")]),v("br"),v("span",{staticClass:"line-number"},[s._v("5")]),v("br"),v("span",{staticClass:"line-number"},[s._v("6")]),v("br"),v("span",{staticClass:"line-number"},[s._v("7")]),v("br"),v("span",{staticClass:"line-number"},[s._v("8")]),v("br"),v("span",{staticClass:"line-number"},[s._v("9")]),v("br"),v("span",{staticClass:"line-number"},[s._v("10")]),v("br"),v("span",{staticClass:"line-number"},[s._v("11")]),v("br")])]),v("h3",{attrs:{id:"添加浏览器私有属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#添加浏览器私有属性"}},[s._v("#")]),s._v(" 添加浏览器私有属性")]),s._v(" "),v("p",[s._v("通常编写CSS都会在一些CSS3属性前加入"),v("code",[s._v("-webkit-")]),s._v("、"),v("code",[s._v("-moz-")]),s._v("、"),v("code",[s._v("-ms-")]),s._v("或"),v("code",[s._v("-o-")]),s._v("，这些奇形怪状写到手软的东西就是"),v("strong",[s._v("浏览器私有属性")]),s._v("。样式少还好，样式多那就欲哭无泪了😂。")]),s._v(" "),v("p",[s._v("出现这些私有属性，是因为制定CSS标准的W3C其动作就像蜗牛一样慢，量产一个CSS属性是需走一个很严格很复杂的流程。一个成熟且被大众肯定的属性，浏览器厂商会加大其支持力度而铺路，但是为了避免日后W3C公布标准时有所变更，就加入一个本厂商的私有属性提前支持该属性，待W3C公布该属性标准后，再让新版浏览器支持标准属性。")]),s._v(" "),v("p",[s._v("对于编写私有属性的顺序需特别注意："),v("strong",[s._v("兼容性写法放到前面，标准写法放到最后")]),s._v("。在浏览器解析CSS过程中，若标准属性无法使用则使用当前浏览器对应的私有属性。")]),s._v(" "),v("div",{staticClass:"language-css line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-css"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Chrome、Safari、New Opera、New Edge */")]),s._v("\n"),v("span",{pre:!0,attrs:{class:"token property"}},[s._v("-webkit-transform")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[s._v("translate")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Firefox */")]),s._v("\n"),v("span",{pre:!0,attrs:{class:"token property"}},[s._v("-moz-transform")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[s._v("translate")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* IExplorer、Old Edge */")]),s._v("\n"),v("span",{pre:!0,attrs:{class:"token property"}},[s._v("-ms-transform")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[s._v("translate")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Old Opera */")]),s._v("\n"),v("span",{pre:!0,attrs:{class:"token property"}},[s._v("-o-transform")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[s._v("translate")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 标准 */")]),s._v("\n"),v("span",{pre:!0,attrs:{class:"token property"}},[s._v("transform")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[s._v("translate")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[s._v("1")]),v("br"),v("span",{staticClass:"line-number"},[s._v("2")]),v("br"),v("span",{staticClass:"line-number"},[s._v("3")]),v("br"),v("span",{staticClass:"line-number"},[s._v("4")]),v("br"),v("span",{staticClass:"line-number"},[s._v("5")]),v("br"),v("span",{staticClass:"line-number"},[s._v("6")]),v("br"),v("span",{staticClass:"line-number"},[s._v("7")]),v("br"),v("span",{staticClass:"line-number"},[s._v("8")]),v("br"),v("span",{staticClass:"line-number"},[s._v("9")]),v("br"),v("span",{staticClass:"line-number"},[s._v("10")]),v("br")])]),v("p",[s._v("当然不是所有的CSS3属性都需补齐"),v("code",[s._v("-webkit-")]),s._v("、"),v("code",[s._v("-moz-")]),s._v("、"),v("code",[s._v("-ms-")]),s._v("或"),v("code",[s._v("-o-")]),s._v("，上述Demo只是一个示例，真正的"),v("code",[s._v("transform")]),s._v("私有属性只有"),v("code",[s._v("-webkit-")]),s._v("和"),v("code",[s._v("-ms-")]),s._v("。这些需查看"),v("code",[s._v("Caniuse")]),s._v("确保正确的编写，若想偷懒也可全部写上。")]),s._v(" "),v("p",[s._v("每个CSS3属性都编写这么一堆兼容性代码，无疑是对生命最大的浪费。在使用Webpack打包项目代码的过程中，可接入"),v("a",{attrs:{href:"https://github.com/webpack-contrib/postcss-loader",target:"_blank",rel:"noopener noreferrer"}},[s._v("postcss-loader"),v("OutboundLink")],1),s._v(" 和"),v("a",{attrs:{href:"https://github.com/csstools/postcss-preset-env",target:"_blank",rel:"noopener noreferrer"}},[s._v("postcss-preset-env"),v("OutboundLink")],1),s._v("，"),v("code",[s._v("postcss-preset-env")]),s._v("内置了"),v("code",[s._v("autoprefixer")]),s._v("，它会依据"),v("code",[s._v("Caniuse")]),s._v("所提供的数据对代码里的CSS3属性批量添加私有属性。")]),s._v(" "),v("p",[s._v("若使用"),v("code",[s._v("bruce-cli")]),s._v("，那么也无需关注CSS私有属性的插入，因为其内置了"),v("code",[s._v("postcss-loader")]),s._v("和"),v("code",[s._v("postcss-preset-env")]),s._v("。自动化工具的好处就是为了解决一些重复而无趣的工作。")]),s._v(" "),v("h3",{attrs:{id:"总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),v("p",[s._v("综上所述，结合【磨平浏览器默认样式】和【插入浏览器私有属性】这两种方法完成浏览器兼容性的处理即可")])])}),[],!1,null,null,null);t.default=_.exports}}]);